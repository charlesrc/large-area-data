<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
  "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns:xlink="http://www.w3.org/1999/xlink" width="144pt" height="144pt" viewBox="0 0 144 144" xmlns="http://www.w3.org/2000/svg" version="1.1">
 <metadata>
  <rdf:RDF xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:cc="http://creativecommons.org/ns#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
   <cc:Work>
    <dc:type rdf:resource="http://purl.org/dc/dcmitype/StillImage"/>
    <dc:date>2025-02-24T09:18:17.946034</dc:date>
    <dc:format>image/svg+xml</dc:format>
    <dc:creator>
     <cc:Agent>
      <dc:title>Matplotlib v3.7.5, https://matplotlib.org/</dc:title>
     </cc:Agent>
    </dc:creator>
   </cc:Work>
  </rdf:RDF>
 </metadata>
 <defs>
  <style type="text/css">*{stroke-linejoin: round; stroke-linecap: butt}</style>
 </defs>
 <g id="figure_1">
  <g id="patch_1">
   <path d="M 0 144 
L 144 144 
L 144 0 
L 0 0 
z
" style="fill: #ffffff"/>
  </g>
  <g id="axes_1">
   <g id="patch_2">
    <path d="M 49.948994 74.9072 
L 103.415796 74.9072 
L 103.415796 21.6 
L 49.948994 21.6 
z
" style="fill: #ffffff"/>
   </g>
   <g clip-path="url(#pd48c5a54fe)">
    <image xlink:href="data:image/png;base64,
" id="image68ed74a4a1" transform="scale(1 -1) translate(0 -54)" x="49.948994" y="-20.9072" width="54" height="54"/>
   </g>
   <g id="matplotlib.axis_1">
    <g id="xtick_1">
     <g id="line2d_1">
      <defs>
       <path id="m5c63ce8c6a" d="M 0 0 
L 0 3.5 
" style="stroke: #000000; stroke-width: 0.5"/>
      </defs>
      <g>
       <use xlink:href="#m5c63ce8c6a" x="60.372773" y="74.9072" style="stroke: #000000; stroke-width: 0.5"/>
      </g>
     </g>
     <g id="text_1">
      <text style="font: 12px 'Arial', sans-serif; text-anchor: middle" x="60.372773" y="90.496575" transform="rotate(-0 60.372773 90.496575)">−2</text>
     </g>
    </g>
    <g id="xtick_2">
     <g id="line2d_2">
      <g>
       <use xlink:href="#m5c63ce8c6a" x="76.682395" y="74.9072" style="stroke: #000000; stroke-width: 0.5"/>
      </g>
     </g>
     <g id="text_2">
      <text style="font: 12px 'Arial', sans-serif; text-anchor: middle" x="76.682395" y="90.496575" transform="rotate(-0 76.682395 90.496575)">0</text>
     </g>
    </g>
    <g id="xtick_3">
     <g id="line2d_3">
      <g>
       <use xlink:href="#m5c63ce8c6a" x="92.992018" y="74.9072" style="stroke: #000000; stroke-width: 0.5"/>
      </g>
     </g>
     <g id="text_3">
      <text style="font: 12px 'Arial', sans-serif; text-anchor: middle" x="92.992018" y="90.496575" transform="rotate(-0 92.992018 90.496575)">2</text>
     </g>
    </g>
    <g id="text_4">
     <!-- X ($\mu$m) -->
     <g transform="translate(45.782395 111.481575)">
      <text>
       <tspan style="font: 20px 'Arial'" x="0 13.339844 18.896484 38.28125 54.941406" y="-0.4375">X (m)</tspan>
       <tspan style="font: oblique 20px 'DejaVu Sans'" x="25.556641" y="-0.4375">μ</tspan>
      </text>
     </g>
    </g>
   </g>
   <g id="matplotlib.axis_2">
    <g id="ytick_1">
     <g id="line2d_4">
      <defs>
       <path id="m821a8bd39b" d="M 0 0 
L -3.5 0 
" style="stroke: #000000; stroke-width: 0.5"/>
      </defs>
      <g>
       <use xlink:href="#m821a8bd39b" x="49.948994" y="64.563222" style="stroke: #000000; stroke-width: 0.5"/>
      </g>
     </g>
     <g id="text_5">
      <text style="font: 12px 'Arial', sans-serif; text-anchor: end" x="42.948994" y="68.85791" transform="rotate(-0 42.948994 68.85791)">−2</text>
     </g>
    </g>
    <g id="ytick_2">
     <g id="line2d_5">
      <g>
       <use xlink:href="#m821a8bd39b" x="49.948994" y="48.2536" style="stroke: #000000; stroke-width: 0.5"/>
      </g>
     </g>
     <g id="text_6">
      <text style="font: 12px 'Arial', sans-serif; text-anchor: end" x="42.948994" y="52.548288" transform="rotate(-0 42.948994 52.548288)">0</text>
     </g>
    </g>
    <g id="ytick_3">
     <g id="line2d_6">
      <g>
       <use xlink:href="#m821a8bd39b" x="49.948994" y="31.943978" style="stroke: #000000; stroke-width: 0.5"/>
      </g>
     </g>
     <g id="text_7">
      <text style="font: 12px 'Arial', sans-serif; text-anchor: end" x="42.948994" y="36.238665" transform="rotate(-0 42.948994 36.238665)">2</text>
     </g>
    </g>
    <g id="text_8">
     <!-- Y ($\mu$m) -->
     <g transform="translate(20.867119 79.1536) rotate(-90)">
      <text>
       <tspan style="font: 20px 'Arial'" x="0 13.339844 18.896484 38.28125 54.941406" y="-0.4375">Y (m)</tspan>
       <tspan style="font: oblique 20px 'DejaVu Sans'" x="25.556641" y="-0.4375">μ</tspan>
      </text>
     </g>
    </g>
   </g>
   <g id="patch_3">
    <path d="M 49.948994 74.9072 
L 49.948994 21.6 
" style="fill: none; stroke: #000000; stroke-width: 0.5; stroke-linejoin: miter; stroke-linecap: square"/>
   </g>
   <g id="patch_4">
    <path d="M 103.415796 74.9072 
L 103.415796 21.6 
" style="fill: none; stroke: #000000; stroke-width: 0.5; stroke-linejoin: miter; stroke-linecap: square"/>
   </g>
   <g id="patch_5">
    <path d="M 49.948994 74.9072 
L 103.415796 74.9072 
" style="fill: none; stroke: #000000; stroke-width: 0.5; stroke-linejoin: miter; stroke-linecap: square"/>
   </g>
   <g id="patch_6">
    <path d="M 49.948994 21.6 
L 103.415796 21.6 
" style="fill: none; stroke: #000000; stroke-width: 0.5; stroke-linejoin: miter; stroke-linecap: square"/>
   </g>
  </g>
  <g id="axes_2">
   <g id="patch_7">
    <path d="M 53.823593 87.18818 
L 99.541198 87.18818 
L 99.541198 84.9023 
L 53.823593 84.9023 
z
" style="fill: #ffffff"/>
   </g>
   <image xlink:href="data:image/png;base64,
iVBORw0KGgoAAAANSUhEUgAAAD8AAAADCAYAAAAk59cJAAAASklEQVR4nOWPXQrAMAiDs/zY+594eyp0w+4CFT4MUSJeku4kSALb6HRVoapaPfdst6yzNXd6Y4zXrS+SYHvbSUJSC8l/cHAd/fwDhzUD/7xNw+0AAAAASUVORK5CYII=" id="imageca40076554" transform="scale(1 -1) translate(0 -2.16)" x="54" y="-84.96" width="45.36" height="2.16"/>
   <g id="matplotlib.axis_3">
    <g id="xtick_4">
     <g id="line2d_7">
      <g>
       <use xlink:href="#m5c63ce8c6a" x="53.823593" y="87.18818" style="stroke: #000000; stroke-width: 0.5"/>
      </g>
     </g>
     <g id="text_9">
      <text style="font: 12px 'Arial', sans-serif; text-anchor: middle" x="53.823593" y="102.777555" transform="rotate(-0 53.823593 102.777555)">0.0</text>
     </g>
    </g>
    <g id="xtick_5">
     <g id="line2d_8">
      <g>
       <use xlink:href="#m5c63ce8c6a" x="84.301996" y="87.18818" style="stroke: #000000; stroke-width: 0.5"/>
      </g>
     </g>
     <g id="text_10">
      <text style="font: 12px 'Arial', sans-serif; text-anchor: middle" x="84.301996" y="102.777555" transform="rotate(-0 84.301996 102.777555)">0.1</text>
     </g>
    </g>
    <g id="text_11">
     <!-- Height ($\mu$m) -->
     <g transform="translate(44.822395 117.922555)">
      <text>
       <tspan style="font: 12px 'Arial'" x="0 8.666016 15.339844 18.005859 24.679688 31.353516 34.6875 38.021484 49.652344 59.648438" y="-0.265625">Height (m)</tspan>
       <tspan style="font: oblique 12px 'DejaVu Sans'" x="42.017578" y="-0.265625">μ</tspan>
      </text>
     </g>
    </g>
   </g>
   <g id="matplotlib.axis_4"/>
   <g id="LineCollection_1"/>
   <g id="patch_8">
    <path d="M 53.823593 87.18818 
L 53.823593 86.04524 
L 53.823593 84.9023 
L 99.541198 84.9023 
L 99.541198 86.04524 
L 99.541198 87.18818 
L 53.823593 87.18818 
z
" style="fill: none; stroke: #000000; stroke-width: 0.5; stroke-linejoin: miter; stroke-linecap: square"/>
   </g>
  </g>
 </g>
 <defs>
  <clipPath id="pd48c5a54fe">
   <rect x="49.948994" y="21.6" width="53.466802" height="53.3072"/>
  </clipPath>
 </defs>
</svg>
